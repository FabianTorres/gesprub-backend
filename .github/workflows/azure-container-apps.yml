name: Build and Deploy Backend

on:
  push:
    branches:
      - main     # Para producción
      - develop  # Para certificación

env:
  # Define los nombres de tus recursos de Azure
  # Los valores reales se tomarán de los secretos
  AZURE_CONTAINER_REGISTRY_CERT: 'registrogesprubbackend' #  Reemplaza si es diferente
  AZURE_CONTAINER_REGISTRY_PROD: 'registrogesprubprod'    #  Reemplaza si es diferente
  IMAGE_NAME: 'gesprub-backend'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # Esta sección elige el entorno de GitHub (y sus secretos) basado en la rama
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'certification' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Determina el nombre del registro a usar basado en la rama
    - name: Set ACR name for environment
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "ACR_NAME=${{ env.AZURE_CONTAINER_REGISTRY_PROD }}" >> $GITHUB_ENV
        else
          echo "ACR_NAME=${{ env.AZURE_CONTAINER_REGISTRY_CERT }}" >> $GITHUB_ENV
        fi

    # Inicia sesión usando los secretos del entorno correspondiente (repo o 'production')
    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.ACR_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    # Construye y sube la imagen al registro correcto
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }}